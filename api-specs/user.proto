syntax = "proto3";
package usersapi;
option go_package = "github.com/hansel-app/hansel/protobuf/usersapi";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service UserService {
  rpc GetOwnProfile (google.protobuf.Empty) returns (GetOwnProfileResponse);
  rpc SearchByUsername (SearchByUsernameRequest) returns (SearchByUsernameResponse);
  rpc GetFriends (google.protobuf.Empty) returns (GetFriendsResponse);
  rpc GetFriendRequests (google.protobuf.Empty) returns (GetFriendRequestsResponse);
  rpc AddFriendRequest (FriendRequest) returns (google.protobuf.Empty);
  rpc AcceptFriendRequest (FriendRequest) returns (google.protobuf.Empty);
  rpc DeclineFriendRequest (FriendRequest) returns (google.protobuf.Empty);
  rpc Block (FriendRequest) returns (google.protobuf.Empty);
  rpc EditOwnProfile (EditProfileRequest) returns (google.protobuf.Empty);

}

message User {
  int64 user_id = 1;
  string display_name = 2;
  string username = 3;
  bytes avatar = 4;
}

message GetOwnProfileResponse {
  User info = 1;
  repeated User friends = 2;
}

message SearchByUsernameRequest {
  string search_query = 1;
}

message SearchByUsernameResponse {
  repeated User users = 1;
}

message GetFriendsResponse {
  repeated User friends = 1;
}

message PendingFriendRequest {
  User requester = 1;
  google.protobuf.Timestamp sent_at = 2;
}

message GetFriendRequestsResponse {
  repeated PendingFriendRequest friend_requests = 1;
}

message FriendRequest {
  int64 requester_id = 1;
  int64 receiver_id = 2;
}

message EditProfileRequest {
  // Using individual fields instead of User 
  // as user_id and username should not be mutable.
  string new_display_name = 1;
  bytes new_avatar = 2;
}
