version: '3.8'

services:
  database:
    image: postgres:13.4
    container_name: hansel-database
    restart: always
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - hansel-network
    logging:
      driver: journald
    expose:
      - '${DB_PORT}'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  backend:
    image: ghcr.io/hansel-app/hansel-backend:latest
    container_name: hansel-backend
    restart: always
    depends_on:
      - database
    networks:
      - hansel-network
    logging:
      driver: journald
    expose:
      - '8000'
    environment:
      GO_ENV: production
      SERVER_PORT: 8000
      SECRET_KEY: ${SECRET_KEY}
      DB_HOSTNAME: hansel-database
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SSLMODE: disable

  backend-proxy:
    image: ghcr.io/hansel-app/hansel-backend-proxy:latest
    container_name: hansel-backend-proxy
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
    networks:
      - hansel-network
    logging:
      driver: journald
    ports:
      - '10000:10000'
    environment:
      # Run as root user to allow accessing of certificates
      ENVOY_UID: 0

  frontend:
    image: ghcr.io/hansel-app/hansel-frontend:latest
    container_name: hansel-frontend
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend-proxy
    networks:
      - hansel-network
    logging:
      driver: journald
    ports:
      - '80:80'
      - '443:443'
    environment:
      NODE_ENV: production
      VUE_APP_SERVER_URL: ${VUE_APP_SERVER_URL}
      VUE_APP_SERVER_PORT: 10000
      VUE_APP_GOOGLE_API_KEY: ${VUE_APP_GOOGLE_API_KEY}
      VUE_APP_GOOGLE_ANALYTICS_ID: ${VUE_APP_GOOGLE_ANALYTICS_ID}

  certbot:
    image: certbot/certbot
    container_name: hansel-certbot
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - frontend
      - backend-proxy
    networks:
      - hansel-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  hansel-network:
